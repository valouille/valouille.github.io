<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ssh on VaLouille</title><link>https://valouille.github.io/tags/ssh/</link><description>Recent content in Ssh on VaLouille</description><generator>Hugo</generator><language>fr</language><copyright>Valérian Beaudoin</copyright><lastBuildDate>Thu, 05 Jul 2018 13:37:00 +0100</lastBuildDate><atom:link href="https://valouille.github.io/tags/ssh/index.xml" rel="self" type="application/rss+xml"/><item><title>Cloud-init doesn't append the SSH-key/password at first boot of an instance</title><link>https://valouille.github.io/post/2018-07-05-cloud-init-does-not-change-hostname-or-ssh-key-password-of-instance-in-openstack/</link><pubDate>Thu, 05 Jul 2018 13:37:00 +0100</pubDate><guid>https://valouille.github.io/post/2018-07-05-cloud-init-does-not-change-hostname-or-ssh-key-password-of-instance-in-openstack/</guid><description>If cloud-init fails to append the specified SSH-key or password at the first boot of an OpenStack instance, or changing the hostname, it could just be a simple misconfiguration of a security group. Indeed, in the default security group or within any newly created security group the following rule is added by default :
Direction Ether Type IP Protocol Port Range Remote IP Prefix Remote Security Group Local IP Prefix Egress IPv4 Any Any 0.</description></item><item><title>How to use KeePassXC with ssh-agent to secure private key access</title><link>https://valouille.github.io/post/2018-03-27-how-to-use-keepass-xc-with-ssh-agent/</link><pubDate>Tue, 27 Mar 2018 13:37:00 +0100</pubDate><guid>https://valouille.github.io/post/2018-03-27-how-to-use-keepass-xc-with-ssh-agent/</guid><description>SSH-keys are the most common way to connect to a server securely and in an effortless way. A good practice is to protect the keys with a long-enough passphrase. Since it can be painful to type it every time one wants to login to a server, ssh-agent is often used to bypass this. But this can be a security caveat, since any malware or anybody who can access the laptop can then use the ssh-key to connect to servers.</description></item><item><title>Utiliser rsync + SSH avec un port différent de 22</title><link>https://valouille.github.io/2013/12/utiliser-rsync-ssh-avec-un-port-different-de-22/</link><pubDate>Thu, 19 Dec 2013 10:10:50 +0000</pubDate><guid>https://valouille.github.io/2013/12/utiliser-rsync-ssh-avec-un-port-different-de-22/</guid><description>Pour utiliser rsync + SSH vers un autre port que le port par défaut, on utilise la commande suivante :
rsync -av -e &amp;#39;ssh -p &amp;lt;PORT&amp;gt;&amp;#39; root@IP.IP.IP.IP:/dossier/source /dossier/destination Par exemple avec le port 2222 :
rsync -av -e &amp;#39;ssh -p 2222&amp;#39; root@IP.IP.IP.IP:/dossier/source /dossier/destination</description></item></channel></rss>