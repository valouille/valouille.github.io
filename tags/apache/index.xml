<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>apache on VaLouille</title><link>https://valouille.github.io/tags/apache/</link><description>Recent content in apache on VaLouille</description><generator>Hugo -- gohugo.io</generator><language>fr</language><copyright>Valérian Beaudoin</copyright><lastBuildDate>Tue, 30 Apr 2013 15:21:26 +0000</lastBuildDate><atom:link href="https://valouille.github.io/tags/apache/index.xml" rel="self" type="application/rss+xml"/><item><title>Résoudre les erreurs Grsec avec un Apache ITK</title><link>https://valouille.github.io/2013/04/resoudre-les-erreurs-grsec-avec-un-apache-itk/</link><pubDate>Tue, 30 Apr 2013 15:21:26 +0000</pubDate><guid>https://valouille.github.io/2013/04/resoudre-les-erreurs-grsec-avec-un-apache-itk/</guid><description>Grsec utilise par défaut les GID 1002, 1003, 1004 et 1005. Cela peut empêcher certaines applications de fonctionner, par exemple un Apache ITK configuré avec des GID utilisés par grsec. Les erreurs logguées dans le kernel ressemblent à ça :
kernel: grsec: From IP.IP.IP.IP: denied connect() by /usr/sbin/apache2[apache2:21077] uid/euid:1003/1003 gid/egid:1003/1003, parent /usr/sbin/apache2[apache2:21072] uid/euid:0/0 gid/egid:0/0 Il y a deux solutions, soit on désactive les fonctions qui nous embêtent :
sysctl kernel.grsecurity.socket_all= sysctl kernel.</description></item><item><title>Ajouter le hostname du serveur dans les headers Apache</title><link>https://valouille.github.io/2013/04/ajouter-le-hostname-du-serveur-dans-les-headers-apache/</link><pubDate>Tue, 30 Apr 2013 14:53:34 +0000</pubDate><guid>https://valouille.github.io/2013/04/ajouter-le-hostname-du-serveur-dans-les-headers-apache/</guid><description>Cela peut être pratique dans le cas où on utilise un cluster de serveur Apache de voir quel est le nom du serveur qui a servi la requête, pour du debug par exemple. Voici la procédure :
Tout d’abord il faut activer le module headers :
a2enmod headers Puis on ajoute la ligne suivante au fichier /usr/sbin/apache2ctl afin de générer une variable d’environnement :
export HOSTNAME=`hostname` Enfin, il faut ajouter les deux lignes suivantes à la fin du fichier /etc/apache2/apache2.</description></item></channel></rss>