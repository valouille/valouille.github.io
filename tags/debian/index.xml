<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>debian on VaLouille</title><link>https://valouille.github.io/tags/debian/</link><description>Recent content in debian on VaLouille</description><generator>Hugo -- gohugo.io</generator><language>fr</language><copyright>Valérian Beaudoin</copyright><lastBuildDate>Fri, 17 Oct 2014 08:48:55 +0000</lastBuildDate><atom:link href="https://valouille.github.io/tags/debian/index.xml" rel="self" type="application/rss+xml"/><item><title>Compiler un module PECL en paquet Debian</title><link>https://valouille.github.io/2014/10/compiler-un-module-pecl-en-paquet-debian/</link><pubDate>Fri, 17 Oct 2014 08:48:55 +0000</pubDate><guid>https://valouille.github.io/2014/10/compiler-un-module-pecl-en-paquet-debian/</guid><description>Voici la procédure pour générer un .deb à partir d’un .tar.gz PECL de la façon la plus simple qui soit.
On aura besoin d’utiliser dh-make-pecl pour générer le répertoire debian :
apt-get install dh-make-php php5-dev ubuntu-dev-tools build-essential On choisit le nom et l’adresse mail du mainteneur du paquet
export DEBFULLNAME=&amp;#34;Valerian Beaudoin&amp;#34; export DEBEMAIL=&amp;#34;mail@domaine.com&amp;#34; On télécharge l’extension PECL qui nous intéresse :
wget http://pecl.php.net/get/apcu-4.0.7.tgz Puis on utilise dh-make-pecl qui va générer les fichiers debian/control, debian/rules … :</description></item><item><title>Installer Dell Powervault MD Storage Software (SMcli …) sous Debian</title><link>https://valouille.github.io/2014/08/installer-dell-powervault-md-storage-software-smcli/</link><pubDate>Wed, 27 Aug 2014 16:23:15 +0000</pubDate><guid>https://valouille.github.io/2014/08/installer-dell-powervault-md-storage-software-smcli/</guid><description>Voici la procédure pour installer SMclient sous Debian en passant par des paquets .DEB :
Java doit être installé :
apt-get install openjdk-7-jre Télécharger le ressource CD/DVD sur le site de Dell (Actuellement : DELL_MDSS_Consolidated_RDVD_5_1_0_9.iso)
Le monter :
mount DELL_MDSS_Consolidated_RDVD_5_1_0_9.iso /mnt On copie les fichiers qui nous intéressent :
mkdir ~/dell_mdss cp /mnt/linux/mdsm/* ~/dell_mdss cd ~/dell_mdss On crée le lien necessaire pour l’exécution du binaire :
ln -s /lib/x86_64-linux-gnu/libc.so.6 /lib/libc.so.6 On lance le binaire :</description></item><item><title>Réparer DPKG/APT quand rien ne va plus</title><link>https://valouille.github.io/2014/04/reparer-dpkgapt-quand-rien-ne-va-plus/</link><pubDate>Thu, 10 Apr 2014 14:02:31 +0000</pubDate><guid>https://valouille.github.io/2014/04/reparer-dpkgapt-quand-rien-ne-va-plus/</guid><description>J’ai récemment eu les erreurs suivantes :
dpkg: regarding .../libgcc1_1%3a4.7.2-5_amd64.deb containing libgcc1:amd64, pre-dependency problem: libgcc1 pre-depends on multiarch-support multiarch-support is unpacked, but has never been configured. dpkg: error processing /var/cache/apt/archives/libgcc1\_1%3a4.7.2-5\_amd64.deb (&amp;amp;#8211;install): pre-dependency problem &amp;amp;#8211; not installing libgcc1:amd64 Preparing to replace libc6:amd64 2.13-38+deb7u1 (using .../libc6_2.13-38+deb7u1_amd64.deb) ... dpkg: error processing /var/cache/apt/archives_old/libc6_2.13-38+deb7u1_amd64.deb (--install): subprocess new pre-installation script returned error exit status 2 Setting up multiarch-support (2.13-38+deb7u1) ... Setting up libgcc1:amd64 (1:4.7.2-5) ... Errors were encountered while processing: /var/cache/apt/archives/libc6_2.</description></item><item><title>Créer un repository Debian signé avec Freight</title><link>https://valouille.github.io/2014/03/creer-un-depot-debian-signe-avec-freight/</link><pubDate>Thu, 20 Mar 2014 10:40:20 +0000</pubDate><guid>https://valouille.github.io/2014/03/creer-un-depot-debian-signe-avec-freight/</guid><description>Reprepro ne permet pas d’avoir plusieurs versions d’un même paquet dans son dépôt. Pour contourner cette limitation, je suis donc passé à Freight.
Freight :
permet d’ajouter des .deb directement sans fichier .changes signe à la volée les paquets autorise plusieurs versions d’un même paquet permet d’avoir plusieurs branches est très simple à installer et à maintenir est très léger et n’a pas besoin de base SQL L’installation est ultra simple :</description></item><item><title>Activer vacation et le faire fonctionner avec roundcube 0.9 et postfixadmin</title><link>https://valouille.github.io/2014/02/activer-vacation-et-le-faire-fonctionner-avec-roundcube-0-9-et-postfixadmin/</link><pubDate>Wed, 19 Feb 2014 11:17:21 +0000</pubDate><guid>https://valouille.github.io/2014/02/activer-vacation-et-le-faire-fonctionner-avec-roundcube-0-9-et-postfixadmin/</guid><description>Voici la procédure pour activer le plugin vacation et le faire fonctionner avec les nouvelles versions de roundcube 0.8.*. domain.com est à changer par un domain qui existe vraiment sur la machine. Ce n’est pas la même procédure qu’avant, car avec les nouvelles versions de roundcube, les anciens plugins ne fonctionnent plus. Celui-ci a été modifié et traduit.
groupadd --gid 10002 vacation useradd -o -d /var/spool/vacation -g 10002 -u 10002 -s /bin/false vacation Ensuite, créer un dossier pour vacation</description></item><item><title>Installer OpenDKIM avec Postfix</title><link>https://valouille.github.io/2013/10/installer-opendkim-avec-postfix/</link><pubDate>Thu, 24 Oct 2013 12:42:05 +0000</pubDate><guid>https://valouille.github.io/2013/10/installer-opendkim-avec-postfix/</guid><description>DKIM permet d’authentifier le nom de domaine de l’expéditeur d’un mail. Cela peut être utile pour ajouter de la fiabilité à ses mails et ainsi éviter qu’ils se trouvent classés comme « spam ».
DKIM s’installe à côté et se couple à Postfix. Voici la procédure pour installer opendkim, et ainsi authentifier les mails qui seront envoyés, à supposer que postfix est déjà fonctionnel.
On installe opendkim
apt-get install opendkim On met en place la configuration dans le fichier /etc/opendkim.</description></item><item><title>Créer un paquet Debian vide</title><link>https://valouille.github.io/2013/10/creer-un-paquet-debian-vide/</link><pubDate>Mon, 14 Oct 2013 09:49:31 +0000</pubDate><guid>https://valouille.github.io/2013/10/creer-un-paquet-debian-vide/</guid><description>Pour créer un « dummy package », c’est à dire un paquet Debian vide qui peut être utile pour satisfaire des dépendances, on utilise equivs. Par exemple, pour libkrb53
apt-get install equivs equivs-control libkrb53 Cela va créer un fichier libkrb53. On l’édite :
Section: misc Priority: optional Standards-Version: 2.9.2 Package: libkrb53 Version: 1.9.1 Maintainer: Valerian Beaudoin Architecture: all Description: Dummy libkrb53 package Puis on le construit et on l’installe
equivs-build libkrb53 dpkg -i libkrb53_1.</description></item><item><title>Réinstaller les fichiers de configuration par défaut d'un paquet debian</title><link>https://valouille.github.io/2013/08/reinstaller-les-fichiers-de-configuration-par-defaut-dun-paquet-debian/</link><pubDate>Fri, 09 Aug 2013 09:49:06 +0000</pubDate><guid>https://valouille.github.io/2013/08/reinstaller-les-fichiers-de-configuration-par-defaut-dun-paquet-debian/</guid><description>Si on a modifié des fichiers de configuration d’un paquet debian et que l’on souhaite remettre les fichiers de configuration originaux, voici la démarche à suivre :
On vérifie que le(s) fichier(s) de configuration sont bien dans le paquet
dpkg --status &amp;lt;paquet&amp;gt; Exemple avec puppet :
Conffiles: /etc/init.d/puppet 79dec4169533326b9e1a21aac681d8e8 /etc/default/puppet 9e5a0cf174ccff1af10342297b8b1bdb Si je veux remettre le fichier /etc/init.d/puppet par défaut, il faut que je le renomme :
mv /etc/init.d/puppet /etc/init.d/puppet.broken Ensuite, je le réinstalle</description></item><item><title>Compiler un module Perl/CPAN en paquet Debian</title><link>https://valouille.github.io/2013/08/compiler-un-module-perlcpan-en-paquet-debian/</link><pubDate>Tue, 06 Aug 2013 09:42:27 +0000</pubDate><guid>https://valouille.github.io/2013/08/compiler-un-module-perlcpan-en-paquet-debian/</guid><description>Voici la procédure pour générer un .deb à partir d’un .tar.gz de la façon la plus simple qui soit.
On aura besoin d’utiliser dh-make-perl pour générer le repertoire debian, ainsi que d’apt-file :
apt-get install dh-make-perl apt-file devscripts build-essential On met à jour apt-file :
apt-file update Ensuite, on télécharge le module que l’on souhaite installer :
wget http://search.cpan.org/CPAN/authors/id/T/TO/TOKUHIROM/FCGI-Client-0.08.tar.gz On l’extrait :
tar xvzf FCGI-Client-0.08.tar.gz Puis on utilise dh-make-perl qui va générer les fichiers debian/control, debian/rules … :</description></item><item><title>Créer un dépôt Debian signé « The Debian Way ! »</title><link>https://valouille.github.io/2013/07/creer-un-depot-debian-signe-the-debian-way/</link><pubDate>Mon, 29 Jul 2013 15:57:53 +0000</pubDate><guid>https://valouille.github.io/2013/07/creer-un-depot-debian-signe-the-debian-way/</guid><description>Voici la procédure permettant de créer un dépôt Debian signé avec des paquets signés.
Il faut tout d’abord générer une clé GPG :
apt:~# gpg --gen-key gpg (GnuPG) 1.4.12; Copyright (C) 2012 Free Software Foundation, Inc. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Sélectionnez le type de clef désiré : (1) RSA et RSA (par défaut) (2) DSA et Elgamal (3) DSA (signature seule) (4) RSA (signature seule) Quel est votre choix ?</description></item><item><title>Comment générer de l'entropie</title><link>https://valouille.github.io/2013/07/comment-generer-de-lentropie/</link><pubDate>Mon, 29 Jul 2013 13:24:38 +0000</pubDate><guid>https://valouille.github.io/2013/07/comment-generer-de-lentropie/</guid><description>Quand j’ai essayé de créer une clé GPG sur une machine fraichement installé, j’ai été confronté au message suivant :
De nombreux octets aléatoires doivent être générés. Vous devriez faire autre chose (taper au clavier, déplacer la souris, utiliser les disques) pendant la génération de nombres premiers ; cela donne au générateur de nombres aléatoires une meilleure chance d&amp;#39;obtenir suffisamment d&amp;#39;entropie. Afin de voir l’entropie disponible, on peut utiliser la commande suivante :</description></item><item><title>Installer HAproxy sous Debian Wheezy</title><link>https://valouille.github.io/2013/06/installer-haproxy-sous-debian-wheezy/</link><pubDate>Wed, 05 Jun 2013 14:32:23 +0000</pubDate><guid>https://valouille.github.io/2013/06/installer-haproxy-sous-debian-wheezy/</guid><description>HAproxy n’est plus dans les depots Debian Wheezy, car l’équipe n’avait pas corrigé certains bugs.
Il est cependant possible de l’installer en ajoutant les backports. Pour cela, simplement ajouter la ligne suivante dans le fichier /etc/apt/sources.list :
deb http://ftp.debian.org/debian/ wheezy-backports main Et :
apt-get update ; apt-get install haproxy</description></item><item><title>Corriger la faille kernel CVE-2013-2094 sans reboot sous Debian</title><link>https://valouille.github.io/2013/05/corriger-la-faille-kernel-cve-2013-2094-sans-reboot-sous-debian/</link><pubDate>Tue, 21 May 2013 13:36:11 +0000</pubDate><guid>https://valouille.github.io/2013/05/corriger-la-faille-kernel-cve-2013-2094-sans-reboot-sous-debian/</guid><description>L’exploit CVE-2013-2094 permet d’exploiter une faille dans la perf_swevent_init function du fichier kernel/events/core.c du noyau Linux, entre les versions 2.6.37 et 3.8.8. Cet exploit permet de passer root.
Pour voir si le noyau utilisé est vulnérable, on peut utiliser la commande suivante :
grep CONFIG_PERF_EVENTS /boot/config-`uname -r` Si la commande renvoie la ligne suivante, et que la version du noyau est comprise entre 2.6.37 et 3.8.8, alors le noyau est vulnérable :</description></item><item><title>Compiler un paquet Debian DKMS pour un module noyau</title><link>https://valouille.github.io/2013/05/compiler-un-paquet-debian-dkms-pour-un-module-noyau/</link><pubDate>Tue, 21 May 2013 12:55:23 +0000</pubDate><guid>https://valouille.github.io/2013/05/compiler-un-paquet-debian-dkms-pour-un-module-noyau/</guid><description>Voici un exemple, pour le module wrapper qui permet de corriger la faille CVE-2013-2094 qui peut être exploitée avec l’outil semtex.c
Il faut installer les dépendances suivantes :
apt-get install debhelper dkms linux-headers-`uname -r` Puis on télécharge les sources du module dans /urs/src:
cd /usr/src wget https://www.develer.com/~arighi/linux/fix/CVE-2013-2094/perf-bug-fix.tar.gz tar xvzf perf-bug-fix.tar.gz Il faut nommer le dossier en utilisant la syntaxe « module-version »
mv perf-bug-fix wrapper-0.1 Puis on se place dans le dossier</description></item><item><title>Installer xdiff sous Debian avec PHP 5.4</title><link>https://valouille.github.io/2013/05/installer-xdiff-sous-debian-avec-php-5-4/</link><pubDate>Mon, 06 May 2013 09:54:55 +0000</pubDate><guid>https://valouille.github.io/2013/05/installer-xdiff-sous-debian-avec-php-5-4/</guid><description>Voici un paquet permettant d’installer l’extension xdiff sous Debian :
Télécharger php5-xdiff-5.4-1.5.2-1+awh_amd64.deb.tar.gz et l’installer :
wget https://blog.valouille.fr/wp-content/uploads/2013/05/php5-xdiff-5.4-1.5.2-1+awh_amd64.deb.tar.gz tar xvzf php5-xdiff-5.4-1.5.2-1+awh_amd64.deb.tar.gz dpkg -i php5-xdiff-5.4-1.5.2-1+awh_amd64.deb On vérifie qu’il est bien présent :
# php -r &amp;#34;phpinfo();&amp;#34; | grep xdiff /etc/php5/cli/conf.d/20-xdiff.ini xdiff xdiff support =&amp;gt; enabled libxdiff version =&amp;gt; LibXDiff v0.23 by Davide Libenzi &amp;lt;davide@xmailserver.org&amp;gt;</description></item><item><title>Ajouter le hostname du serveur dans les headers Apache</title><link>https://valouille.github.io/2013/04/ajouter-le-hostname-du-serveur-dans-les-headers-apache/</link><pubDate>Tue, 30 Apr 2013 14:53:34 +0000</pubDate><guid>https://valouille.github.io/2013/04/ajouter-le-hostname-du-serveur-dans-les-headers-apache/</guid><description>Cela peut être pratique dans le cas où on utilise un cluster de serveur Apache de voir quel est le nom du serveur qui a servi la requête, pour du debug par exemple. Voici la procédure :
Tout d’abord il faut activer le module headers :
a2enmod headers Puis on ajoute la ligne suivante au fichier /usr/sbin/apache2ctl afin de générer une variable d’environnement :
export HOSTNAME=`hostname` Enfin, il faut ajouter les deux lignes suivantes à la fin du fichier /etc/apache2/apache2.</description></item><item><title>Installer Java 6, Java 7 ou Java 8 de SUN/Oracle sous Debian</title><link>https://valouille.github.io/2013/04/installer-java-6-java-7-ou-java-8-de-sunoracle-sous-debian/</link><pubDate>Wed, 24 Apr 2013 16:55:53 +0000</pubDate><guid>https://valouille.github.io/2013/04/installer-java-6-java-7-ou-java-8-de-sunoracle-sous-debian/</guid><description>Voici la procédure pour installer Java Runtime Environment (jre) sous Debian :
Installer Java 6 Ajouter les sources non-free au fichier /etc/apt/sources.list :
deb http://ftp.fr.debian.org/debian/ squeeze main contrib non-free Puis il suffit de mettre à jour la liste des paquets et d’installer java :
apt-get update apt-get install sun-java6-plugin sun-java6-jre Installer Java 7 Il faut installer le paquet java-package qui permet de convertir en .deb le tar.gz :
apt-get install java-package Puis on télécharge le paquet de Java 7 sur le site d’oracle ou ci-dessous :</description></item><item><title>Paquets Debian pour roundcube 0.9.0</title><link>https://valouille.github.io/2013/04/paquets-debian-pour-roundcube-0-9-0/</link><pubDate>Fri, 19 Apr 2013 16:14:31 +0000</pubDate><guid>https://valouille.github.io/2013/04/paquets-debian-pour-roundcube-0-9-0/</guid><description>Voici des paquets debian permettant d’installer la dernière version de roundcube :
roundcube_0.9.0.tar.gz
Pour l’installer :
wget https://blog.valouille.fr/wp-content/uploads/2013/04/roundcube_0.9.0.tar.gz tar xvzf roundcube_0.9.0.tar.gz dpkg -i roundcube_0.9.0-1_all.deb roundcube-core_0.9.0-1_all.deb roundcube-mysql_0.9.0-1_all.deb roundcube-plugins_0.9.0-1_all.deb Ou pour utiliser postgreSQL à la place de mySQL:
dpkg -i roundcube_0.9.0-1_all.deb roundcube-core_0.9.0-1_all.deb roundcube-pgsql_0.9.0-1_all.deb roundcube-plugins_0.9.0-1_all.deb</description></item><item><title>Installer Puppet 2.6 sous Debian 3.1 Sarge et Etch</title><link>https://valouille.github.io/2013/03/installer-puppet-2-6-sous-debian-3-1-sarge-et-etch/</link><pubDate>Thu, 28 Mar 2013 12:23:15 +0000</pubDate><guid>https://valouille.github.io/2013/03/installer-puppet-2-6-sous-debian-3-1-sarge-et-etch/</guid><description>A l’installation de puppet sous Debian Sarge, on se retrouve avec l’erreur suivante :
err: /File[/var/lib/puppet/lib]: Failed to generate additional resources using &amp;#39;eval_generate&amp;#39;: unknown message digest algorithm err: /File[/var/lib/puppet/lib]: Could not evaluate: unknown message digest algorithm Could not retrieve file metadata for puppet://bushmills.nexen.net/plugins: unknown message digest algorithm Il s’agit d’un bug de la libssl0.9.8, comme on le voit dans les bug reports suivants : #648285, #544819, ou #541735
Sous Debian Sarge, c’est la version 0.</description></item><item><title>Installation d'un serveur OpenVPN et automatisation</title><link>https://valouille.github.io/2013/02/installation-dun-serveur-openvpn-et-automatisation/</link><pubDate>Mon, 18 Feb 2013 22:27:39 +0000</pubDate><guid>https://valouille.github.io/2013/02/installation-dun-serveur-openvpn-et-automatisation/</guid><description>OpenVPN est un logiciel permettant de monter un serveur VPN SSL. Le but est de créer un LAN qui passe sur le WAN, et dont les données sont cryptées. Cela est utile quand on ne souhaite pas ouvrir de ports à partir de tout internet par exemple. Ce tutorial présente l’installation d’un serveur OpenVPN avec une identification par certificats, qui sont uniques à chaque personne.
Installation d’un serveur OpenVPN Il faut installer le paquet OpenVPN</description></item><item><title>Installer Pound 2.6 sous Debian Squeeze</title><link>https://valouille.github.io/2013/02/installer-pound-2-6-sous-debian-squeeze/</link><pubDate>Wed, 13 Feb 2013 11:13:23 +0000</pubDate><guid>https://valouille.github.io/2013/02/installer-pound-2-6-sous-debian-squeeze/</guid><description>Pound est un reverse proxy open source et peut aussi être utilisé à des fins de loadbalancing. Voici la version 2.6 compatible avec Debian Squeeze compilée sous forme de paquets .deb. A télécharger ici : pound-2.6-2-squeeze.tar.gz
Pour l’installer :
mkdir pound &amp;amp;amp;&amp;amp;amp; cd pound wget https://blog.valouille.fr/wp-content/uploads/2013/02/pound-2.6-2-squeeze.tar.gz tar xvzf pound-2.6-2-squeeze.tar.gz dpkg -i *.deb Attention, il est nécessaire d’installer la libssl1.0.0.</description></item><item><title>Installer bacula-fd 5.0.2 sur Debian Lenny/Etch</title><link>https://valouille.github.io/2013/02/installer-bacula-fd-5-0-2-sur-debian-lennyetch/</link><pubDate>Tue, 12 Feb 2013 15:18:09 +0000</pubDate><guid>https://valouille.github.io/2013/02/installer-bacula-fd-5-0-2-sur-debian-lennyetch/</guid><description>Voici des paquets Bacula 5 qui fonctionnent sous Debian 4.0. Avec les versions précédentes (&amp;lt; 5.0), certaines fonctionnalités de bacula ne sont pas disponibles. Si vous avez besoin d&amp;rsquo;utiliser bacula-fd 5 sur des vieilles version de debian, voici comment faire :
Sous Lenny, il suffit de les installer via les backports : Ajouter au fichier /etc/apt/sources.list les lignes suivantes : deb http://ftp.debian.org/debian-backports lenny-backports main deb-src http://ftp.debian.org/debian-backports lenny-backports main apt-get update apt-get install -t lenny-backports bacula-fd Sous Etch, il faut utiliser les paquets suivants : bacula_5.</description></item></channel></rss>